best1 = optim(.2*t, Returns0atGoal, lower = rep(1,7), upper = t,method = 'L-BFGS-B')
/2*t
.2*t
best1 = optim(.2*t, Returns0atGoal, lower = rep(1,7), upper = t)
best100 = sapply(1:(N-1),function(i) optim(i*t/N, Returns0atGoal))
best100 = sapply(1:(N-1),function(i) optim(i*t/N, Returns0atGoal, lower = rep(0,7), upper = t)$par)
sum(round(best$par))
t/.4
sum(t/.4)
sum(t)
best1 = optim(.2*t, Returns0atGoal)
optim(.1*t, Returns0atGoal)$par
optim(.2*t, Returns0atGoal)$par
optim(.3*t, Returns0atGoal)$par
t
c(sapply(1:5, function(i) sum(grepl('test',list.files(paste0('/Volumes/las$/STAT/KaggleDataComp/data/raw_data/Dog_',i))))), sapply(1:2, function(i) sum(grepl('test',list.files(paste0('/Volumes/las$/STAT/KaggleDataComp/data/raw_data/Patient_',i))))))
.4*c(sapply(1:5, function(i) sum(grepl('test',list.files(paste0('/Volumes/las$/STAT/KaggleDataComp/data/raw_data/Dog_',i))))), sapply(1:2, function(i) sum(grepl('test',list.files(paste0('/Volumes/las$/STAT/KaggleDataComp/data/raw_data/Patient_',i))))))
t = .4*c(sapply(1:5, function(i) sum(grepl('test',list.files(paste0('/Volumes/las$/STAT/KaggleDataComp/data/raw_data/Dog_',i))))), sapply(1:2, function(i) sum(grepl('test',list.files(paste0('/Volumes/las$/STAT/KaggleDataComp/data/raw_data/Patient_',i))))))
AUC = c(.49128, .55855, .46885, .47984, .49809, .48837, .51501)
d = .2*t
d
D
T
unlist(sapply(1:7,function(i) 1 - d[i]/D)) == unlist(sapply(1:7,function(i) 1 - ((t[i] - d[i])/(T - D))))
unlist(sapply(1:7,function(i) 1 - d[i]/D))
unlist(sapply(1:7,function(i) 1 - ((t[i] - d[i])/(T - D))))
(1-AUC)
sapply(1:7,function(i) 1 + f_1[i] - f_0[i])
.5*sapply(1:7,function(i) 1 + f_1[i] - f_0[i])
LHS1 - RHS1
abs(LHS1 - RHS1)
sum(abs(LHS1 - RHS1))
round(sum(abs(LHS1 - RHS1)),6))
round(sum(abs(LHS1 - RHS1)),6)
d = .3*t
optim(.1*t, Returns0atGoal)
optim(.5*t, Returns0atGoal, lower = rep(1,7),upper = t)
Returns0atGoal = function(d){
.1*t
Returns0atGoal2 = function(d){
D = sum(d)
f_1 = unlist(sapply(1:7,function(i) 1 - d[i]/D))
f_0 = unlist(sapply(1:7,function(i) 1 - ((t[i] - d[i])/(T - D))))
LHS1 = (1-AUC)
RHS1 = .5*sapply(1:7,function(i) 1 + f_1[i] - f_0[i])
LHS2 = 2*(1 - AUC)*D*(T-D)
RHS2 = D*(T-D) - T*d + D*t
return(round(sum(abs(LHS1 - RHS1)),6))
Returns0atGoal[best100
best1 = optim(.1*t, Returns0atGoal)
best1
N = 100
best100 = sapply(1:(N-1),function(i) optim(i*t/N, Returns0atGoal)$value)
best100
qplot(1:99,best100)
best100 = sapply(1:(N-1),function(i) optim(i*t/N, Returns0atGoal)$par)
qplot(1:99,best100[1,])
qplot(1:99,best100[2,])
qplot(1:99,best100[3,])
qplot(1:99,best100[4,])
qplot(1:99,best100[5,])
qplot(1:99,best100[6,])
qplot(1:99,best100[7,])
A = .7
LHS1 = 2*(1-AUC)*A
LHS1
sum(LHS1) == 1
Returns0atGoal2 = function(x){
A = .7*T
LHS1 = 2*(1-AUC)*A/T
Returns0atGoal2 = function(propA){
T = sum(t)
LHS1 = 2*(1-AUC)*propA
return(sum(LHS1))
sapply(1:1000, function(i) Return0atGoal2(i/1000))
sapply(1:1000, function(i) Returns0atGoal2(i/1000))
sapply(1:1000, function(i) Returns0atGoal2(i/1000)) - 1 > 0
143/T
1/(3*sum(1 - AUC))
*sum(1 - AUC)
sum(1 - AUC)
library(devtools)#
install_github('armstrtw/rzmq')#
install_github("takluyver/IRdisplay")#
install_github("takluyver/IRkernel")
install.packages('bitops')#
install.packages('RCurl')#
install.packages('plyr')#
install.packages('dplyr')#
install.packages('reshape2')#
install.packages('tidyr')#
install.packages('ggplot2')
require(R.matlab)
qplot(c(1:100,1:100),c(1:100,log(1:100))
)
ggplot2:::qplot(c(1:100,1:100),c(1:100,log(1:100)))
ggplot2:::qplot(c(1:100,1:100),c(1:100,log(1:100)),color=c(rep(1,100),rep(2,100)))
2^6
2^6 + 2^5 + 2^2
?log
log(100,2)
log(90,2)
log(5,2)
exp(0.5119*gender)
exp(0.5119*1)
install.packages('RODBC')
library(RODBC)
conn = odbcConnectExcel("~/Downloads/predictions.xlsx")
?odbcConnectExcel
read.csv('~/KrisPred.csv')
read.csv('~/Downloads/submissionpacffft.modified20.csv')
KP = read.csv('~/KrisPred.csv')
KPreds = sapply(1:7,function(i) KP[,i])
KPreds = unlist(sapply(1:7,function(i) KP[,i]))
KP[,1]
KPreds = c(KP[,1], KP[,2], KP[,3], KP[,4], KP[,5], KP[,6], KP[,7])
KPreds
dat = read.csv('~/Downloads/submissionpacffft.modified20.csv')[,1]
rbind(dat,KPreds[1:nrow(dat),])
rbind(dat,KPreds[1:nrow(dat)])
read.csv('~/Downloads/submissionpacffft.modified20.csv')[,1]
names(dat)
clip = read.csv('~/Downloads/submissionpacffft.modified20.csv')[,1]
data.frame('clip' = clip,'preictal' = KPreds[1:length(clip)])
d = data.frame('clip' = clip,'preictal' = KPreds[1:length(clip)])
write.csv('KPreds.submit.csv',row.names=FALSE)
write.csv(d,'KPreds.submit.csv',row.names=FALSE)
58/507
51/507
50/507
quit(save = "no")
library(rvest)
html("http://www.stat.iastate.edu/people/faculty/") %>%
html_nodes(".link") %>%
html_table()
install_github('cpsievert/XML2R')
library(XML2R)
obs <- XML2Obs("http://bit.ly/mario-xml")
table(names(obs))
obs  <- add_key(obs,parent = 'mariokart//driver', recycle = 'name')
obs
collapse_obs(obs)
q()
325000000
20000/325000000
zoo = function(dog,cat,cow='horse'){
return(paste(dog,cat,cow))
zoo('kip','pip')
zoo('kip','pip','pop')
tikpics.labels = function(x,y,z,xlab,ylab,zlab){
tikpics.labels = function(x = NULL,y = NULL,z = NULL,xlab = NULL,ylab = NULL,zlab = NULL){
tikpics2Dscatter.template = function()
if(geom = 'scatter'){
tikpics2Dscatter.template = function(){
grab.tikpics.labels = function(x = NULL,y = NULL,z = NULL,xlab = NULL,ylab = NULL,zlab = NULL){
if(is.null(xlab)){
tikpics.xlabel = deparse(substitute(x))
tikpics.xlabel = xlab
if(is.null(ylab)){
tikpics.ylabel = deparse(substitute(y))
tikpics.ylabel = ylab
if(is.null(zlab)){
tikpics.zlabel = deparse(substitute(z))
tikpics.zlabel = zlab
return(c(tikpics.xlabel,tikpics.ylabel,tikpics.zlabel))
x = 1:100
grab.tikpics.labels(x)
grab.tikpics.labels(x,'100 random values')
grab.tikpics.labels(x,xlab)
tikpics2Dscatter.template = function(x,y,data){
tikpics2Dscatter.template = function(x,y,data=NULL){
tikpics.coordinates = "tikpics.coordinates = paste0('(',tikpics.d$tikpics.x,', ',tikpics.d$tikpics.y,')',collapse='\n')"
if(data == NULL){
tikpics.coordinates = gsub('tikpics.d$',,tikpics.coordinates)
tikpics.coordinates = gsub('tikpics.d',data,tikpics.coordinates)
tikpics.coordinates = gsub('tikpics.x',x,tikpics.coordinates)
tikpics.coordinates = gsub('tikpics.y',y,tikpics.coordinates)
eval(parse(text = tikpics.coordinates))
tikpics = gsub('tikpics.coordinates',tikpics.coordinates,tikpics)
tikpics2Dscatter(d$carat,d$price)
is.data.frame(d)
is.data.frame(d)[1]
tikpics2Dscatter = function(x,y,data=NULL){
tikpics2Dscatter = function(){
tikpics.options = 'only marks, y=.5cm'
\\addplot[color=tikpics.color,mark=tikpics.mark, only marks]
tikpics2Dscatter = function(options=NULL){
if(is.null(options)){
tikpics.options = 'only marks'
tikpics.color = 'black'
tikpics.mark = 'x'
tikpics = '
\\begin{tikzpicture}
\\begin{axis}[
xlabel=tikpics.xlabel,
ylabel=tikpics.ylabel
]
\\addplot[color=tikpics.color,mark=tikpics.mark, tikpics.options]
coordinates{
tikpics = gsub('tikpics.options',tikpics.options,tikpics)
tikpics = gsub('tikpics.color',tikpics.color,tikpics)
tikpics = gsub('tikpics.mark',tikpics.mark,tikpics)
return(tikpics)
grab.tikpics.labels = function(var = NULL,var.label = NULL){
if(is.null(var.label)){
tikpics.varlabel = deparse(substitute(var))
}else{
tikpics.varlabel = var.label
return(tikpics.varlabel)
}
tikpics = tikpics2Dscatter()
d = diamonds[1:100,]
tikpics2Dscatter(carat,price,data=d)
tikpics2Dscatter()
tikpics = gsub('tikpics.xlabel', grab.tikpics.labels(x,xlab),tikpics)
tikpics('carat',price,data=d)
base::source("/tmp/r-plugin-user/Rsource-12773-tikz_demo.rnw")
tikpics('carat','price',data=d)
names(d)
require(ggplot2)
data(diamonds)
d = diamonds[sample(1:nrow(diamonds))[1:40],]
head(d)
paste('(0,0,',d$x,') (0, 0, ', d$y, ') (0, 0, ',d$z,')')
paste0('(0,0,',d$x,') (0, 0, ', d$y, ') (0, 0, ',d$z,')',)
paste('(0,0,',d$x,') (0, 0, ', d$y, ') (0, 0, ',d$z,')',)
paste('(0,0,',d$x,') (0, 0, ', d$y, ') (0, 0, ',d$z,')',collapse = '\n')
base::source("/tmp/r-plugin-user/Rsource-17490-tikz_demo.rnw")
\\addplot3[surf] coordinates{
tikpics.coords =
paste0('(0,0,',d$x,') (0, 0, ', d$y, ') (0, 0, ',d$z,')',collapse = '\n')
cat(tikpics3d)
tikpics.coords = paste0('(',d$x,', ', d$y, ', ',d$z,')',collapse = '\n')
tikpics.coords
tikpics3d = gsub('tikpics.coordinates',tikpics.coords,tikpics3d)
tikpics.coords = paste0('(',d$x,', ', d$y, ', ',d$z,') (',d$x,', ', d$y, ', 0)',collapse = '\n')
tikpics3d = '\\begin{tikzpicture}
\\begin{axis}
\\addplot3[only marks] coordinates{
tikpics.coordinates
};
\\end{axis}
\\end{tikzpicture}'
gsub('tikpics.coordinates',tikpics.coords,tikpics3d)
seq(10,90,10)
base::source("/tmp/r-plugin-user/Rsource-35159-tikz_demo.rnw")
tikpics(carat,price,data=d)
tikpics(x,y,z,data=d,geom='scatter3d')
tikpics(x,y,z,data=d,geom='scatter3d',tour=TRUE)
setwd('~/github/tikpics/')
library(devtools)
document()
install()
grabtikz('Jessie baby')
install_github('imouzon','tikpics')
install_github('tikpics/imouzon')
install_github('imouzon/tikpics')
require(tikzpics)
require(tikpics)
